name: CI
on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Nix
        uses: cachix/install-nix-action@v9
        with:
            skip_adding_nixpkgs_channel: true
      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
      - name: Shell (cache inputs)
        run: nix-shell
      - name: Format
        run: nix-shell --run 'cargo fmt --all -- --check' --arg isDevelopmentShell false
      - name: Build
        run: nix-shell --run 'cargo build' --arg isDevelopmentShell false
      - name: Clippy
        run: nix-shell --run 'cargo clippy --all-features' --arg isDevelopmentShell false
      - name: Test
        run: nix-shell --run 'cargo test' --arg isDevelopmentShell false
  nix-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Nix
        uses: cachix/install-nix-action@v9
        with:
            skip_adding_nixpkgs_channel: true
      - name: Build
        run: nix-build
  nix-shell:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Nix
        uses: cachix/install-nix-action@v9
        with:
            skip_adding_nixpkgs_channel: true
      - name: Build
        run: nix-build -A allBuildInputs shell.nix
